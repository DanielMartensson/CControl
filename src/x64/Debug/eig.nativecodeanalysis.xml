<?xml version="1.0" encoding="UTF-8"?>
<DEFECTS>
  <DEFECT>
    <SFA>
      <FILEPATH>C:\Users\dmn\GitHub\CControl\src\CControl\Sources\LinearAlgebra\</FILEPATH>
      <FILENAME>eig.c</FILENAME>
      <LINE>459</LINE>
      <COLUMN>25</COLUMN>
    </SFA>
    <DEFECTCODE>26451</DEFECTCODE>
    <DESCRIPTION>Arithmetic overflow: Using operator '-' on a 4 byte value and then casting the result to a 8 byte value. Cast the value to the wider type before calling operator '-' to avoid overflow (io.2).</DESCRIPTION>
    <FUNCTION>qr_shift_algorithm</FUNCTION>
    <DECORATED>qr_shift_algorithm</DECORATED>
    <FUNCLINE>443</FUNCLINE>
    <PATH></PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>C:\Users\dmn\GitHub\CControl\src\CControl\Sources\LinearAlgebra\</FILEPATH>
      <FILENAME>eig.c</FILENAME>
      <LINE>474</LINE>
      <COLUMN>20</COLUMN>
    </SFA>
    <DEFECTCODE>26451</DEFECTCODE>
    <DESCRIPTION>Arithmetic overflow: Using operator '-' on a 4 byte value and then casting the result to a 8 byte value. Cast the value to the wider type before calling operator '-' to avoid overflow (io.2).</DESCRIPTION>
    <FUNCTION>qr_shift_algorithm</FUNCTION>
    <DECORATED>qr_shift_algorithm</DECORATED>
    <FUNCLINE>443</FUNCLINE>
    <PATH></PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>C:\Users\dmn\GitHub\CControl\src\CControl\Sources\LinearAlgebra\</FILEPATH>
      <FILENAME>eig.c</FILENAME>
      <LINE>475</LINE>
      <COLUMN>43</COLUMN>
    </SFA>
    <DEFECTCODE>26451</DEFECTCODE>
    <DESCRIPTION>Arithmetic overflow: Using operator '-' on a 4 byte value and then casting the result to a 8 byte value. Cast the value to the wider type before calling operator '-' to avoid overflow (io.2).</DESCRIPTION>
    <FUNCTION>qr_shift_algorithm</FUNCTION>
    <DECORATED>qr_shift_algorithm</DECORATED>
    <FUNCLINE>443</FUNCLINE>
    <PATH></PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>C:\Users\dmn\GitHub\CControl\src\CControl\Sources\LinearAlgebra\</FILEPATH>
      <FILENAME>eig.c</FILENAME>
      <LINE>506</LINE>
      <COLUMN>58</COLUMN>
    </SFA>
    <DEFECTCODE>26451</DEFECTCODE>
    <DESCRIPTION>Arithmetic overflow: Using operator '-' on a 4 byte value and then casting the result to a 8 byte value. Cast the value to the wider type before calling operator '-' to avoid overflow (io.2).</DESCRIPTION>
    <FUNCTION>qr_shift_algorithm</FUNCTION>
    <DECORATED>qr_shift_algorithm</DECORATED>
    <FUNCLINE>443</FUNCLINE>
    <PATH></PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>C:\Users\dmn\GitHub\CControl\src\CControl\Sources\LinearAlgebra\</FILEPATH>
      <FILENAME>eig.c</FILENAME>
      <LINE>515</LINE>
      <COLUMN>35</COLUMN>
    </SFA>
    <DEFECTCODE>26451</DEFECTCODE>
    <DESCRIPTION>Arithmetic overflow: Using operator '+' on a 4 byte value and then casting the result to a 8 byte value. Cast the value to the wider type before calling operator '+' to avoid overflow (io.2).</DESCRIPTION>
    <FUNCTION>qr_shift_algorithm</FUNCTION>
    <DECORATED>qr_shift_algorithm</DECORATED>
    <FUNCLINE>443</FUNCLINE>
    <PATH></PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>C:\Users\dmn\GitHub\CControl\src\CControl\Sources\LinearAlgebra\</FILEPATH>
      <FILENAME>eig.c</FILENAME>
      <LINE>516</LINE>
      <COLUMN>21</COLUMN>
    </SFA>
    <DEFECTCODE>26451</DEFECTCODE>
    <DESCRIPTION>Arithmetic overflow: Using operator '+' on a 4 byte value and then casting the result to a 8 byte value. Cast the value to the wider type before calling operator '+' to avoid overflow (io.2).</DESCRIPTION>
    <FUNCTION>qr_shift_algorithm</FUNCTION>
    <DECORATED>qr_shift_algorithm</DECORATED>
    <FUNCLINE>443</FUNCLINE>
    <PATH></PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>C:\Users\dmn\GitHub\CControl\src\CControl\Sources\LinearAlgebra\</FILEPATH>
      <FILENAME>eig.c</FILENAME>
      <LINE>517</LINE>
      <COLUMN>21</COLUMN>
    </SFA>
    <DEFECTCODE>26451</DEFECTCODE>
    <DESCRIPTION>Arithmetic overflow: Using operator '+' on a 4 byte value and then casting the result to a 8 byte value. Cast the value to the wider type before calling operator '+' to avoid overflow (io.2).</DESCRIPTION>
    <FUNCTION>qr_shift_algorithm</FUNCTION>
    <DECORATED>qr_shift_algorithm</DECORATED>
    <FUNCLINE>443</FUNCLINE>
    <PATH></PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>C:\Users\dmn\GitHub\CControl\src\CControl\Sources\LinearAlgebra\</FILEPATH>
      <FILENAME>eig.c</FILENAME>
      <LINE>526</LINE>
      <COLUMN>39</COLUMN>
    </SFA>
    <DEFECTCODE>26451</DEFECTCODE>
    <DESCRIPTION>Arithmetic overflow: Using operator '-' on a 4 byte value and then casting the result to a 8 byte value. Cast the value to the wider type before calling operator '-' to avoid overflow (io.2).</DESCRIPTION>
    <FUNCTION>qr_shift_algorithm</FUNCTION>
    <DECORATED>qr_shift_algorithm</DECORATED>
    <FUNCLINE>443</FUNCLINE>
    <PATH></PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>C:\Users\dmn\GitHub\CControl\src\CControl\Sources\LinearAlgebra\</FILEPATH>
      <FILENAME>eig.c</FILENAME>
      <LINE>526</LINE>
      <COLUMN>84</COLUMN>
    </SFA>
    <DEFECTCODE>26451</DEFECTCODE>
    <DESCRIPTION>Arithmetic overflow: Using operator '+' on a 4 byte value and then casting the result to a 8 byte value. Cast the value to the wider type before calling operator '+' to avoid overflow (io.2).</DESCRIPTION>
    <FUNCTION>qr_shift_algorithm</FUNCTION>
    <DECORATED>qr_shift_algorithm</DECORATED>
    <FUNCLINE>443</FUNCLINE>
    <PATH></PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>C:\Users\dmn\GitHub\CControl\src\CControl\Sources\LinearAlgebra\</FILEPATH>
      <FILENAME>eig.c</FILENAME>
      <LINE>532</LINE>
      <COLUMN>17</COLUMN>
    </SFA>
    <DEFECTCODE>26451</DEFECTCODE>
    <DESCRIPTION>Arithmetic overflow: Using operator '+' on a 4 byte value and then casting the result to a 8 byte value. Cast the value to the wider type before calling operator '+' to avoid overflow (io.2).</DESCRIPTION>
    <FUNCTION>qr_shift_algorithm</FUNCTION>
    <DECORATED>qr_shift_algorithm</DECORATED>
    <FUNCLINE>443</FUNCLINE>
    <PATH></PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>C:\Users\dmn\GitHub\CControl\src\CControl\Sources\LinearAlgebra\</FILEPATH>
      <FILENAME>eig.c</FILENAME>
      <LINE>534</LINE>
      <COLUMN>18</COLUMN>
    </SFA>
    <DEFECTCODE>26451</DEFECTCODE>
    <DESCRIPTION>Arithmetic overflow: Using operator '+' on a 4 byte value and then casting the result to a 8 byte value. Cast the value to the wider type before calling operator '+' to avoid overflow (io.2).</DESCRIPTION>
    <FUNCTION>qr_shift_algorithm</FUNCTION>
    <DECORATED>qr_shift_algorithm</DECORATED>
    <FUNCLINE>443</FUNCLINE>
    <PATH></PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>C:\Users\dmn\GitHub\CControl\src\CControl\Sources\LinearAlgebra\</FILEPATH>
      <FILENAME>eig.c</FILENAME>
      <LINE>540</LINE>
      <COLUMN>22</COLUMN>
    </SFA>
    <DEFECTCODE>26451</DEFECTCODE>
    <DESCRIPTION>Arithmetic overflow: Using operator '+' on a 4 byte value and then casting the result to a 8 byte value. Cast the value to the wider type before calling operator '+' to avoid overflow (io.2).</DESCRIPTION>
    <FUNCTION>qr_shift_algorithm</FUNCTION>
    <DECORATED>qr_shift_algorithm</DECORATED>
    <FUNCLINE>443</FUNCLINE>
    <PATH></PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>C:\Users\dmn\GitHub\CControl\src\CControl\Sources\LinearAlgebra\</FILEPATH>
      <FILENAME>eig.c</FILENAME>
      <LINE>543</LINE>
      <COLUMN>23</COLUMN>
    </SFA>
    <DEFECTCODE>26451</DEFECTCODE>
    <DESCRIPTION>Arithmetic overflow: Using operator '+' on a 4 byte value and then casting the result to a 8 byte value. Cast the value to the wider type before calling operator '+' to avoid overflow (io.2).</DESCRIPTION>
    <FUNCTION>qr_shift_algorithm</FUNCTION>
    <DECORATED>qr_shift_algorithm</DECORATED>
    <FUNCLINE>443</FUNCLINE>
    <PATH></PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>C:\Users\dmn\GitHub\CControl\src\CControl\Sources\LinearAlgebra\</FILEPATH>
      <FILENAME>eig.c</FILENAME>
      <LINE>567</LINE>
      <COLUMN>44</COLUMN>
    </SFA>
    <DEFECTCODE>26451</DEFECTCODE>
    <DESCRIPTION>Arithmetic overflow: Using operator '+' on a 4 byte value and then casting the result to a 8 byte value. Cast the value to the wider type before calling operator '+' to avoid overflow (io.2).</DESCRIPTION>
    <FUNCTION>qr_shift_algorithm</FUNCTION>
    <DECORATED>qr_shift_algorithm</DECORATED>
    <FUNCLINE>443</FUNCLINE>
    <PATH></PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>C:\Users\dmn\GitHub\CControl\src\CControl\Sources\LinearAlgebra\</FILEPATH>
      <FILENAME>eig.c</FILENAME>
      <LINE>569</LINE>
      <COLUMN>29</COLUMN>
    </SFA>
    <DEFECTCODE>26451</DEFECTCODE>
    <DESCRIPTION>Arithmetic overflow: Using operator '+' on a 4 byte value and then casting the result to a 8 byte value. Cast the value to the wider type before calling operator '+' to avoid overflow (io.2).</DESCRIPTION>
    <FUNCTION>qr_shift_algorithm</FUNCTION>
    <DECORATED>qr_shift_algorithm</DECORATED>
    <FUNCLINE>443</FUNCLINE>
    <PATH></PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>C:\Users\dmn\GitHub\CControl\src\CControl\Sources\LinearAlgebra\</FILEPATH>
      <FILENAME>eig.c</FILENAME>
      <LINE>570</LINE>
      <COLUMN>20</COLUMN>
    </SFA>
    <DEFECTCODE>26451</DEFECTCODE>
    <DESCRIPTION>Arithmetic overflow: Using operator '+' on a 4 byte value and then casting the result to a 8 byte value. Cast the value to the wider type before calling operator '+' to avoid overflow (io.2).</DESCRIPTION>
    <FUNCTION>qr_shift_algorithm</FUNCTION>
    <DECORATED>qr_shift_algorithm</DECORATED>
    <FUNCLINE>443</FUNCLINE>
    <PATH></PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>C:\Users\dmn\GitHub\CControl\src\CControl\Sources\LinearAlgebra\</FILEPATH>
      <FILENAME>eig.c</FILENAME>
      <LINE>572</LINE>
      <COLUMN>19</COLUMN>
    </SFA>
    <DEFECTCODE>26451</DEFECTCODE>
    <DESCRIPTION>Arithmetic overflow: Using operator '+' on a 4 byte value and then casting the result to a 8 byte value. Cast the value to the wider type before calling operator '+' to avoid overflow (io.2).</DESCRIPTION>
    <FUNCTION>qr_shift_algorithm</FUNCTION>
    <DECORATED>qr_shift_algorithm</DECORATED>
    <FUNCLINE>443</FUNCLINE>
    <PATH></PATH>
  </DEFECT>
</DEFECTS>