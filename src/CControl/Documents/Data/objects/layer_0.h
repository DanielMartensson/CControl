/*
 * layer_0.h
 *
 * Created on : 2023-11-09 17:09:27
 * Author: <Your name>
 * Purpose: <Classify <your things>
 * Model ID: 20995
 */

#ifndef layer_0_H_
#define layer_0_H_

/* Add the CControl header file */
#include "ccontrol.h"

/*
 * This is a Neural Network - A model that can classify raw data.
 * Most used for images, but you can use it at any data you want as long the data is stored into .pgm files in format P2 or P5.
 * This file contains one matrix called 'layer_0_w' and one vector called 'layer_0_b'.
 * To use this header file, your data that must be a vector of size 'layer_0_column' in row-major.
 * For example, if you have an image with size m * n, where m * n = 'layer_0_column', then you need to turn it into a vector in row-wise, not in column-wise.
 * Multiply your vector together with the matrix 'layer_0_w' and add vector 'layer_0_b'. Then you will get a new vector called y with the size 'layer_0_row'.
 * y = layer_0_w*your_data_vector + layer_0_b
 * The index of the largest number inside the vector y is the class ID of your_data_vector.
 * If you get wrong class ID, then you need to use take account to noise or use better dimension reduction.
 */

#define layer_0_row 4
#define layer_0_column 88

const static float layer_0_w[layer_0_row * layer_0_column] = { 9.861803055e-02f, 9.861803055e-02f, 9.861803055e-02f, 7.751277089e-02f, 1.254229248e-02f, -6.578238308e-02f, -4.541799426e-04f, -2.964671701e-02f, -2.028659359e-02f, -1.043136418e-01f, -2.733141482e-01f, -7.675151527e-02f, -3.964797780e-02f, -1.367745250e-01f, -8.209744841e-02f, -8.563429862e-02f, 1.399496943e-01f, 1.444685906e-01f, 1.233633310e-01f, 1.233633310e-01f, 5.839287862e-02f, -1.993180066e-02f, -5.015128478e-02f, -1.833196729e-02f, -6.838814914e-02f, -1.530519426e-01f, -3.656355739e-01f, -3.932126239e-02f, -7.311753929e-02f, -1.434476227e-01f, -1.254694462e-01f, -1.802095324e-01f, 1.108734608e-01f, 1.153923422e-01f, 1.678739935e-01f, 1.678739935e-01f, 1.029035449e-01f, -5.634273589e-02f, -5.634273589e-02f, 6.713621318e-03f, -1.870520115e-01f, -1.464962214e-01f, -3.363039494e-01f, -5.158134177e-02f, -2.099364996e-03f, -2.099364996e-03f, -3.584921360e-04f, 2.322608232e-02f, 2.995186299e-02f, 2.995186299e-02f, 1.080577075e-01f, 1.080577075e-01f, 4.308724031e-02f, 4.308724031e-02f, -5.299307406e-03f, 6.285713613e-02f, -7.679007947e-02f, -1.818170249e-01f, -2.496208251e-01f, -9.312538803e-02f, -6.664051116e-02f, -6.664051116e-02f, -6.489963830e-02f, -2.335282974e-02f, 1.035387963e-01f, 1.035387963e-01f, 1.080577075e-01f, 1.080577075e-01f, 4.308724031e-02f, -5.299307406e-03f, 3.386566043e-02f, -2.938574553e-02f, -7.514134049e-02f, -2.190792114e-01f, -7.139936090e-02f, -5.626195297e-02f, -6.967025995e-02f, -1.017530859e-01f, -1.000122130e-01f, -1.000122130e-01f, -1.430511475e-06f, 2.802971378e-02f, 5.886390433e-02f, -2.592623234e-03f, 3.386896849e-02f, 6.832604110e-02f, 6.832604110e-02f, -8.544190228e-02f, 
1.254229248e-02f, -6.578238308e-02f, -4.541799426e-04f, -2.964671701e-02f, -2.028659359e-02f, -1.043136418e-01f, -2.733141482e-01f, -7.675151527e-02f, -3.964797780e-02f, -1.367745250e-01f, -8.209744841e-02f, -8.563429862e-02f, 1.399496943e-01f, 1.444685906e-01f, 1.233633310e-01f, 1.233633310e-01f, 5.839287862e-02f, -1.993180066e-02f, -5.015128478e-02f, -1.833196729e-02f, -6.838814914e-02f, -1.530519426e-01f, -3.656355739e-01f, -3.932126239e-02f, -7.311753929e-02f, -1.434476227e-01f, -1.254694462e-01f, -1.802095324e-01f, 1.108734608e-01f, 1.153923422e-01f, 1.678739935e-01f, 1.678739935e-01f, 1.029035449e-01f, -5.634273589e-02f, -5.634273589e-02f, 6.713621318e-03f, -1.870520115e-01f, -1.464962214e-01f, -3.363039494e-01f, -5.158134177e-02f, -2.099364996e-03f, -2.099364996e-03f, -3.584921360e-04f, 2.322608232e-02f, 2.995186299e-02f, 2.995186299e-02f, 1.080577075e-01f, 1.080577075e-01f, 4.308724031e-02f, 4.308724031e-02f, -5.299307406e-03f, 6.285713613e-02f, -7.679007947e-02f, -1.818170249e-01f, -2.496208251e-01f, -9.312538803e-02f, -6.664051116e-02f, -6.664051116e-02f, -6.489963830e-02f, -2.335282974e-02f, 1.035387963e-01f, 1.035387963e-01f, 1.080577075e-01f, 1.080577075e-01f, 4.308724031e-02f, -5.299307406e-03f, 3.386566043e-02f, -2.938574553e-02f, -7.514134049e-02f, -2.190792114e-01f, -7.139936090e-02f, -5.626195297e-02f, -6.967025995e-02f, -1.017530859e-01f, -1.000122130e-01f, -1.000122130e-01f, -1.430511475e-06f, 2.802971378e-02f, 5.886390433e-02f, -2.592623234e-03f, 3.386896849e-02f, 6.832604110e-02f, 6.832604110e-02f, -8.544190228e-02f, -1.195224226e-01f, -1.050916314e-01f, -1.121896505e-01f, -1.140160859e-01f, 
-2.028659359e-02f, -1.043136418e-01f, -2.733141482e-01f, -7.675151527e-02f, -3.964797780e-02f, -1.367745250e-01f, -8.209744841e-02f, -8.563429862e-02f, 1.399496943e-01f, 1.444685906e-01f, 1.233633310e-01f, 1.233633310e-01f, 5.839287862e-02f, -1.993180066e-02f, -5.015128478e-02f, -1.833196729e-02f, -6.838814914e-02f, -1.530519426e-01f, -3.656355739e-01f, -3.932126239e-02f, -7.311753929e-02f, -1.434476227e-01f, -1.254694462e-01f, -1.802095324e-01f, 1.108734608e-01f, 1.153923422e-01f, 1.678739935e-01f, 1.678739935e-01f, 1.029035449e-01f, -5.634273589e-02f, -5.634273589e-02f, 6.713621318e-03f, -1.870520115e-01f, -1.464962214e-01f, -3.363039494e-01f, -5.158134177e-02f, -2.099364996e-03f, -2.099364996e-03f, -3.584921360e-04f, 2.322608232e-02f, 2.995186299e-02f, 2.995186299e-02f, 1.080577075e-01f, 1.080577075e-01f, 4.308724031e-02f, 4.308724031e-02f, -5.299307406e-03f, 6.285713613e-02f, -7.679007947e-02f, -1.818170249e-01f, -2.496208251e-01f, -9.312538803e-02f, -6.664051116e-02f, -6.664051116e-02f, -6.489963830e-02f, -2.335282974e-02f, 1.035387963e-01f, 1.035387963e-01f, 1.080577075e-01f, 1.080577075e-01f, 4.308724031e-02f, -5.299307406e-03f, 3.386566043e-02f, -2.938574553e-02f, -7.514134049e-02f, -2.190792114e-01f, -7.139936090e-02f, -5.626195297e-02f, -6.967025995e-02f, -1.017530859e-01f, -1.000122130e-01f, -1.000122130e-01f, -1.430511475e-06f, 2.802971378e-02f, 5.886390433e-02f, -2.592623234e-03f, 3.386896849e-02f, 6.832604110e-02f, 6.832604110e-02f, -8.544190228e-02f, -1.195224226e-01f, -1.050916314e-01f, -1.121896505e-01f, -1.140160859e-01f, -2.042833418e-01f, -1.196472496e-01f, -1.181165874e-01f, -5.917149410e-02f, 
-3.964797780e-02f, -1.367745250e-01f, -8.209744841e-02f, -8.563429862e-02f, 1.399496943e-01f, 1.444685906e-01f, 1.233633310e-01f, 1.233633310e-01f, 5.839287862e-02f, -1.993180066e-02f, -5.015128478e-02f, -1.833196729e-02f, -6.838814914e-02f, -1.530519426e-01f, -3.656355739e-01f, -3.932126239e-02f, -7.311753929e-02f, -1.434476227e-01f, -1.254694462e-01f, -1.802095324e-01f, 1.108734608e-01f, 1.153923422e-01f, 1.678739935e-01f, 1.678739935e-01f, 1.029035449e-01f, -5.634273589e-02f, -5.634273589e-02f, 6.713621318e-03f, -1.870520115e-01f, -1.464962214e-01f, -3.363039494e-01f, -5.158134177e-02f, -2.099364996e-03f, -2.099364996e-03f, -3.584921360e-04f, 2.322608232e-02f, 2.995186299e-02f, 2.995186299e-02f, 1.080577075e-01f, 1.080577075e-01f, 4.308724031e-02f, 4.308724031e-02f, -5.299307406e-03f, 6.285713613e-02f, -7.679007947e-02f, -1.818170249e-01f, -2.496208251e-01f, -9.312538803e-02f, -6.664051116e-02f, -6.664051116e-02f, -6.489963830e-02f, -2.335282974e-02f, 1.035387963e-01f, 1.035387963e-01f, 1.080577075e-01f, 1.080577075e-01f, 4.308724031e-02f, -5.299307406e-03f, 3.386566043e-02f, -2.938574553e-02f, -7.514134049e-02f, -2.190792114e-01f, -7.139936090e-02f, -5.626195297e-02f, -6.967025995e-02f, -1.017530859e-01f, -1.000122130e-01f, -1.000122130e-01f, -1.430511475e-06f, 2.802971378e-02f, 5.886390433e-02f, -2.592623234e-03f, 3.386896849e-02f, 6.832604110e-02f, 6.832604110e-02f, -8.544190228e-02f, -1.195224226e-01f, -1.050916314e-01f, -1.121896505e-01f, -1.140160859e-01f, -2.042833418e-01f, -1.196472496e-01f, -1.181165874e-01f, -5.917149410e-02f, -2.357706428e-02f, -5.292081833e-02f, -5.292081833e-02f, -5.203455687e-02f };

const static float layer_0_b[layer_0_row] = { -7.196473479e-01f, 1.765040040e+00f, -2.075689077e+00f, -5.630626678e+00f };

const static ACTIVATION_FUNCTION layer_0_activtion_function = ACTIVATION_FUNCTION_CLOSEST_VALUE_INDEX;

#endif /* !layer_0_H_ */
