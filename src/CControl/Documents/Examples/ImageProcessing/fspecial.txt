/*
 ============================================================================
 Name        : fspecial.c
 Author      : <Your Name Here>
 Version     : 1.0
 Copyright   : MIT
 Description : Generate 1D or 2D kernels
 ============================================================================
 */

#include "CControl/ccontrol.h"

int main() {
	clock_t start, end;
	float cpu_time_used;
	start = clock();


	/* Create 2D gaussian */
	size_t K_size;
	float sigma = 1.0;
	float* K = fspecial(sigma, &K_size, FSPECIAL_TYPE_GAUSSIAN_2D);

	/* Print */
	print(K, K_size, K_size);

	/* Free */
	free(K);

	/* Create 1D gaussian */
	K = fspecial(sigma, &K_size, FSPECIAL_TYPE_GAUSSIAN_1D);

	/* Print */
	print(K, K_size, 1);

	/* Free */
	free(K);

	/* Create circular pattern */
	K = fspecial(sigma, &K_size, FSPECIAL_TYPE_BOX_OF_ONES);

	/* Print */
	print(K, K_size, K_size);

	/* Free */
	free(K);

	/* Detect memory leakage */
	detectmemoryleak();

	end = clock();
	cpu_time_used = ((float)(end - start)) / CLOCKS_PER_SEC;
	printf("\nTotal speed  was %f\n", cpu_time_used);

	return EXIT_SUCCESS;
}