/*
 ============================================================================
 Name        : fspecial.c
 Author      : <Your Name Here>
 Version     : 1.0
 Copyright   : MIT
 Description : Gaussian kernel
 ============================================================================
 */

#include "CControl/ccontrol.h"

#define row 10
#define column 10
#define sigma 0.8

int main() {
	clock_t start, end;
	float cpu_time_used;
	start = clock();


	/* Create kernel K */
	const size_t K_size = 2 * roundf(6.0f * sigma) + 1;
	float* K = fspecial(row, column, sigma, FSPECIAL_TYPE_GAUSSIAN);

	/* Print */
	print(K, row, column);

	/* Detect memory leakage */
	detectmemoryleak();

	end = clock();
	cpu_time_used = ((float)(end - start)) / CLOCKS_PER_SEC;
	printf("\nTotal speed  was %f\n", cpu_time_used);

	return EXIT_SUCCESS;
}