/*
 ============================================================================
 Name        : Linear_Model_Predictive_Control.c
 Author      : Daniel MÃ¥rtensson
 Version     : 1.0
 Copyright   : MIT
 Description : Model Predictive Control with linear programming algorithm: linprog
 ============================================================================
 */

#include "CControl/Headers/Functions.h"

#define ADIM 2
#define RDIM 1
#define YDIM 1
#define HORIZON 20

int main() {

	// State space model that have integration behavior
	float A[ADIM * ADIM] = {1.71653,   1.00000,
		      	  	  	   -0.71653,   0.00000};

	float B[ADIM * RDIM] = { 0.18699,
			                 0.16734};
	float C[YDIM * ADIM] = { 1, 0 };

	// Print our state space matrix
	printf("System matrix: A\n");
	print(A, ADIM, ADIM);

	printf("Input matrix: B\n");
	print(B, ADIM, RDIM);

	printf("Output matrix: C\n");
	print(C, YDIM, ADIM);

	float x[ADIM] = { 0, 0};
	float u[RDIM] = { 0 };
	float r[YDIM] = { 12.5 };
	float K[ADIM] = {0, 0};
	float y[YDIM] = {0};
	float inputs[200];

	// Do Model Predictive Control where we selecting last u
	for(int i = 0; i < 200; i++){
		mpc(A, B, C, x, u, r, ADIM, YDIM, RDIM, HORIZON, 1);
		kalman(A, B, C, K, u, x, y, ADIM, YDIM, RDIM); // Do only state update x = Ax + Bu
		inputs[i] = u[0];
	}

	printf("Complete inputs:\n");
	print(inputs, 200, 1);

	return EXIT_SUCCESS;
}