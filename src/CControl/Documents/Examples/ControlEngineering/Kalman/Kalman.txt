/*
 ============================================================================
 Name        : Kalman.c
 Author      : Daniel Mårtensson
 Version     : 1.0
 Copyright   : MIT
 Description : Kalman filter estimation example
 ============================================================================
 */

#include "CControl/Headers/Functions.h"

#define ADIM 2
#define RDIM 2
#define YDIM 2

int main() {

	// Create our matrices
	float A[ADIM * ADIM] = {0.79499,   0.33654,
		                   -0.70673,   0.35749};
	float B[ADIM * RDIM] = {0.2050072,   0.0097622,
		                    0.7067279,   0.0336537};
	float C[YDIM * ADIM] = {1.20000,   0.00000,
		                    0.00000,   0.30000};
	float K[ADIM * YDIM] = {0.532591,  -0.066108,
			               -0.503803,   0.136580};

	/*
	 * Print our state space matrix
	 */
	printf("System matrix: A\n");
	print(A, ADIM, ADIM);

	printf("Input matrix: B\n");
	print(B, ADIM, RDIM);

	printf("Output matrix: C\n");
	print(C, YDIM, ADIM);

	printf("Kalman gain matrix: K\n");
	print(K, ADIM, YDIM);

	// Create input u, output y and state vector x
	float u[RDIM] = {2.2,
			         4.3};
	float y[YDIM] = {5.134,
			         0.131};
	float x[ADIM] = {2.32,
			         4.12};

	// Call kalman function and estimate our future state at x(k+1)
	printf("Our current state vector is:\n");
    print(x, ADIM, 1);
	kalman(A, B, C, K, u, x, y, ADIM, YDIM, RDIM);
	printf("Our estimated state vector is:\n");
	print(x, ADIM, 1);

	return EXIT_SUCCESS;
}