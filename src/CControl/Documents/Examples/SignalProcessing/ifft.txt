/*
 ============================================================================
 Name        : ifft.c
 Author      : <Your Name Here>
 Version     : 1.0
 Copyright   : MIT
 Description : Inverse FFT on an array
 ============================================================================
 */

#include "CControl/ccontrol.h"

#define n 11

int main() {
	clock_t start, end;
	float cpu_time_used;
	start = clock();

	/* Create x */
	float xr[n] = { -0.6485,   0.2851,   1.3475, -0.6743, -0.1499, -1.5549,   1.4951,   0.4504, -0.4982,   0.3488, 0.1 };
	float xi[n];

	/* Do inverse FFT */
	fft(xr, xi, n);
	ifft(xr, xi, n);

	/* Print */
	print(xr, 1, n);
	print(xi, 1, n);

	end = clock();
	cpu_time_used = ((float)(end - start)) / CLOCKS_PER_SEC;
	printf("\nTotal speed  was %f\n", cpu_time_used);

	return EXIT_SUCCESS;
}

/*
 * GNU Octave code:
 * 
   A = [-0.6485,   0.2851,   1.3475, -0.6743, -0.1499, -1.5549, 1.4951,   0.4504, -0.4982,   0.3488, 0.1 ];
   ifft(A)
 */