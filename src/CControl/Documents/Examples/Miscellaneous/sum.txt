/*
 ============================================================================
 Name        : sum.c
 Author      : Daniel MÃ¥rtensson
 Version     : 1.0
 Copyright   : MIT
 Description : Sum a matrix
 ============================================================================
 */

#include "CControl/Headers/Functions.h"

int main() {
	clock_t start, end;
	float cpu_time_used;
	start = clock();

	float A[4*6] = {1.262565,   1.067358,  -2.716538,  -0.818984,  -0.745526,  -0.541102,
				    0.413238,   0.923610,  -1.686731,  -0.542751,   1.217574,  -1.038054,
				   -0.822918,  -0.181148,   0.381538,  -0.195310,  -0.692809,  -1.072073,
				    0.326243,  -0.267135,  -2.556454,  -0.667999,  -0.644878,   0.016818};

	/*
	 * Sum A, row = 4, column = 6,
	 * Row direction = 1
	 * Column direction = 2
	 */
	float y1[6];
	float y2[4];
	sum(A, y1, 4, 6, 1); // Row direction
	sum(A, y2, 4, 6, 2); // Column direction

	/* Print y1 */
	print(y1, 1, 6);

	/* Print y2 */
	print(y2, 4, 1);

	end = clock();
	cpu_time_used = ((float) (end - start)) / CLOCKS_PER_SEC;
	printf("\nTotal speed  was %f\n", cpu_time_used);


	return EXIT_SUCCESS;
}

/* GNU Octave code
 *
 *
 * >> A
	A =
	
	   1.262565   1.067358  -2.716538  -0.818984  -0.745526  -0.541102
	   0.413238   0.923610  -1.686731  -0.542751   1.217574  -1.038054
	  -0.822918  -0.181148   0.381538  -0.195310  -0.692809  -1.072073
	   0.326243  -0.267135  -2.556454  -0.667999  -0.644878   0.016818
	
	>> sum(A, 1)
	ans =
	
	   1.1791   1.5427  -6.5782  -2.2250  -0.8656  -2.6344
	
	>> sum(A, 2)
	ans =
	
	  -2.4922
	  -0.7131
	  -2.5827
	  -3.7934
	
	>>
 *
 */
