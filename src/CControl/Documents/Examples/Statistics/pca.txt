/*
 ============================================================================
 Name        : pca.c
 Author      : Daniel Mårtensson
 Version     : 1.0
 Copyright   : MIT
 Description : Principal Analysis Component
 ============================================================================
 */

#include "CControl/Headers/Functions.h"

#define row 3
#define column 3

int main() {
	clock_t start, end;
	float cpu_time_used;
	start = clock();

	/* Create a matrix A */
	float A[row * column] = {5.43, 2.34, 7.42,
						   8.65, -1.54, 24.2,
						   0.73, -5.32, 0.26};

	/* Create the output matrix */
	float U[column * column];
	float mu[row];

	/* Do PCA */
	uint8_t num_components = 0;
	pca(A, mu, U, num_components, row, column);

	/* Print output U */
	print(U, column, column);

	end = clock();
	cpu_time_used = ((float) (end - start)) / CLOCKS_PER_SEC;
	printf("\nTotal speed  was %f\n", cpu_time_used);


	return EXIT_SUCCESS;
}
