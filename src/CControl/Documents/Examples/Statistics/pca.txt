/*
 ============================================================================
 Name        : pca.c
 Author      : Daniel Mårtensson
 Version     : 1.0
 Copyright   : MIT
 Description : Principal Analysis Component
 ============================================================================
 */

#include "CControl/Headers/Functions.h"

#define row 11
#define column 3
#define components 2 /* Components cannot be larger than column */

int main() {
	clock_t start, end;
	float cpu_time_used;
	start = clock();

	/* Create a matrix X */
	float X[row * column] = { 1, 3, 10,
							  2, 4, 12,
							  3, 6, 13,
							  4, 10, 16,
							  5, 13, 20,
							  30, 34, 104,
							  31, 56, 120,
							  32, 74, 127,
							  33, 80, 128,
							  34, 89, 131,
							  35, 103, 139 };

	/* Create the output matrix */
	float W[column * components];

	/* Create the projection matrix */
	float P[row * components];

	/* Do PCA */
	pca(X, W, P, components, row, column);

	/* Print components W */
	printf("Components:\n");
	print(W, column, components);

	/* Print projection P */
	printf("Projection:\n");
	print(P, row, components);

	end = clock();
	cpu_time_used = ((float)(end - start)) / CLOCKS_PER_SEC;
	printf("\nTotal speed  was %f\n", cpu_time_used);

	return EXIT_SUCCESS;
}
