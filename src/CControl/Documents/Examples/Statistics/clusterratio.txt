/*
 ============================================================================
 Name        : clusterratio.c
 Author      : <Your Name Here>
 Version     : 1.0
 Copyright   : MIT
 Description : Compute the cluster ratio of a matrix X
 ============================================================================
 */

#include "CControl/ccontrol.h"

#define row_x 10
#define row_y 10
#define column 3

int main() {
	clock_t start, end;
	float cpu_time_used;
	start = clock();

	/* Create matrix X */
	float X[row_x * column] = { 0.883569,   0.137782,  -1.370748,
							 -0.287254,  -0.523210,  -0.055695,
							 -1.453730,   1.136529,  -0.270079,
							 -0.912358,  -1.012460,  -0.221850,
							  0.456170,   1.452307,   0.688098,
							 -0.493595,  -1.457424,  -0.861034,
							  1.024440,  -1.620565,  -0.763060,
							  1.892080,   1.060947,   0.091925,
							 -0.484114,  -1.524378,   0.325710,
							  0.693651,  -0.502022,  -1.009710 };

	/* Create matrix Y */
	float Y[row_y * column] = { 0.051683,   0.423031,  -6.026104,
							 -0.319140,  -0.237961,   0.288949,
							 -1.555616,   1.421778,   5.074565,
							 -8.044244,  -0.227211,   0.122794,
							  0.324284,   1.437556,   1.032742,
							 -6.625481,  -1.472175,  -0.516390,
							  0.892554,   1.335316,  -0.418416,
							  3.760194,   6.346196,   2.436569,
							 -6.616000,  -1.239129,   0.670354,
							  9.561765,  -0.216773,  -0.665066 };

	/* Print */
	printf("The ratio between X and Y is: %f\n", clusterratio(X, Y, row_x, row_y, column));

	/* Detect memory leakage */
	detectmemoryleak();

	end = clock();
	cpu_time_used = ((float)(end - start)) / CLOCKS_PER_SEC;
	printf("\nTotal speed  was %f\n", cpu_time_used);

	return EXIT_SUCCESS;
}