/*
 ============================================================================
 Name        : covm.c
 Author      : Daniel Mårtensson
 Version     : 1.0
 Copyright   : MIT
 Description : Covariance of a matrix
 ============================================================================
 */

#include "CControl/Headers/Functions.h"

#define row 7
#define column 15

int main() {
	clock_t start, end;
	float cpu_time_used;
	start = clock();

	/* Create a matrix X */
	float X[row * column] = { 1.2728,     -0.36547,      0.68505,      -1.0574,      -1.2045,     -0.92432,       1.4365,     -0.16106,     -0.48166,  -1.8685,       -0.694,     0.070631,      0.64477,     -0.68641,     0.089715,
					   -0.43468,     -0.79101,     0.026709,      0.93476,      -1.0388,      -1.3911,       -1.952,      0.55584,      -1.0549, -0.72454,       1.2319,      -1.5877,      0.83961,     -0.13554,     -0.50264,
					   -0.58425,     -0.28557,       -1.126,      -1.2017,      0.62607,     -0.68838,      0.12606,      0.64138,      0.86003, -0.16475,       1.3645,      0.20788,      0.49795,      -1.4394,      0.33117,
					  -0.027078,      0.82297,       1.0295,        1.865,      0.63335,    -0.020842,     -0.97425,     -0.74584,      -1.3266, -0.29814,       1.2731,     -0.74892,      -1.8926,    -0.082449,     -0.36409,
						0.63059,      0.85787,     -0.78536,       2.2746,     -0.76871,     -0.74203,      0.65182,    -0.012599,       1.4966, -0.84699,     -0.23234,      0.23088,     -0.48266,     -0.21415,      -0.4839,
						0.32812,      0.22213,     -0.18081,      -2.7175,      0.17749,      0.16662,       1.5695,     -0.50224,     0.055364, 0.087841,      0.52972,      -1.5707,      0.25717,      -1.1804,     -0.41628,
						-0.3845,      0.84373,     -0.26776,     -0.41406,      0.86366,       1.0458,      0.92923,     -0.36558,      0.17761,   1.2917,     -0.74526,      0.83441,      -1.1806,     -0.39902,      -1.4924 };


	/* Create covariance matrix Y */
	float Y[column * column];

	/* Do Covariance */
	covm(X, Y, row, column);

	/* Print components*/
	print(Y, column, column);

	end = clock();
	cpu_time_used = ((float)(end - start)) / CLOCKS_PER_SEC;
	printf("\nTotal speed  was %f\n", cpu_time_used);

	return EXIT_SUCCESS;
}

/*
 * GNU Octave code:
   X = [1.2728,     -0.36547,      0.68505,      -1.0574,      -1.2045,     -0.92432,       1.4365,     -0.16106,     -0.48166,  -1.8685,       -0.694,     0.070631,      0.64477,     -0.68641,     0.089715,
	  -0.43468,     -0.79101,     0.026709,      0.93476,      -1.0388,      -1.3911,       -1.952,      0.55584,      -1.0549, -0.72454,       1.2319,      -1.5877,      0.83961,     -0.13554,     -0.50264,
	  -0.58425,     -0.28557,       -1.126,      -1.2017,      0.62607,     -0.68838,      0.12606,      0.64138,      0.86003, -0.16475,       1.3645,      0.20788,      0.49795,      -1.4394,      0.33117,
	 -0.027078,      0.82297,       1.0295,        1.865,      0.63335,    -0.020842,     -0.97425,     -0.74584,      -1.3266, -0.29814,       1.2731,     -0.74892,      -1.8926,    -0.082449,     -0.36409,
	   0.63059,      0.85787,     -0.78536,       2.2746,     -0.76871,     -0.74203,      0.65182,    -0.012599,       1.4966, -0.84699,     -0.23234,      0.23088,     -0.48266,     -0.21415,      -0.4839,
	   0.32812,      0.22213,     -0.18081,      -2.7175,      0.17749,      0.16662,       1.5695,     -0.50224,     0.055364, 0.087841,      0.52972,      -1.5707,      0.25717,      -1.1804,     -0.41628,
	   -0.3845,      0.84373,     -0.26776,     -0.41406,      0.86366,       1.0458,      0.92923,     -0.36558,      0.17761,   1.2917,     -0.74526,      0.83441,      -1.1806,     -0.39902,      -1.4924];

	Y = cov(X)
 */