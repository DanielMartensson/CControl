/*
 ============================================================================
 Name        : lsq.c
 Author      : Daniel MÃ¥rtensson
 Version     : 1.0
 Copyright   : MIT
 Description : Least squares for solving Ax=b by using LUP-factorization and tikhonov regularization
 ============================================================================
 */

#include <stdio.h>
#include <stdlib.h>
#include "CControl/Headers/Functions.h"

int main() {


	float A[2 * 2] = {4.2,   4.4,
		      	  	 -5.1,   1.4};

	float b[2 * 1] = {2,
				      6};

	// Our solution
	float x[2 * 1] = {0,
					  0};

	// Show the matrix and the vector
	printf("Matrix A\n");
	print(A, 2, 2);

	printf("Vector b\n");
	print(b, 2, 1);

	// Solve
	float alpha = 0.01;
	linsolve_lsq(A, x, b, 2, 2, alpha);

	printf("Vector x\n");
	print(x, 2, 1);

	return EXIT_SUCCESS;
}

/* GNU Octave code:
 *  >> A = [4.2 4.4;-5.1 1.4];
	>> b = [2;6];
	>> alpha = 0.01;
	>> x = inv(A'*A + alpha*eye(2))*A'*b
	x =
  	  -0.8329
   	   1.2492
	>>
 */
