/*
 ============================================================================
 Name        : dlyap.c
 Author      : Daniel MÃ¥rtensson
 Version     : 1.0
 Copyright   : MIT
 Description : Solve the discrete lyapunov equation
 ============================================================================
 */

#include "CControl/Headers/Functions.h"

int main() {

	// Matrix A
	float A[2*2] = {0.798231,   0.191700,
			  	   -0.575101,   0.031430};

	// Symmetric positive matrix
	float Q[2*2] = {1,   2,
				    2,   3};

	// Solution for the equation A * P * A' - P + Q = 0
	float P[2*2];

	clock_t start, end;
	float cpu_time_used;
	start = clock();
	dlyap(A, P, Q, 2);
	end = clock();
	cpu_time_used = ((float) (end - start)) / CLOCKS_PER_SEC;
	printf("\nTotal speed  was %f\n", cpu_time_used);

	// Print P - This A matrix have absolute eigenvalues less < 1 because of P > 0 and P = P^T
	printf("P\n");
	print(P, 2, 2);

	return EXIT_SUCCESS;
}

/*
 * GNU Octave code:
 * A = [0.798231,   0.191700,
	   -0.575101,   0.031430];

	Q = [1  2,
		 2, 3];

	P = dlyap(A, Q) % Using Matavecontrol package
 */
