/*
 ============================================================================
 Name        : mul.c
 Author      : Daniel Mårtensson
 Version     : 1.0
 Copyright   : MIT
 Description : Do multiplication C = A*B
 ============================================================================
 */

#include "CControl/ccontrol.h"

#define row_a 6
#define column_a 5
#define row_b 5
#define column_b 4

int main() {

	/* Matrix A */
	float A[row_a * column_a] = { 0.762664,   0.361977,   0.914004,   0.166355,   0.535495,
								  0.287733,   0.442407,   0.822338,   0.655626,   0.083685,
								  0.733371,   0.122252,   0.815606,   0.196840,   0.080970,
								  0.777981,   0.688653,   0.530031,   0.969136,   0.572176,
								  0.473056,   0.341139,   0.029444,   0.942228,   0.544707,
								  0.663111,   0.463252,   0.121968,   0.195217,   0.359241 };

	/* Matrix B */
	float B[row_b * column_b] = { 0.92328,   - 0.34648,   0.048628,   0.37831,
								  0.68159,   - 0.88784,    0.15051, - 0.75803,
								 - 1.4826,    - 0.9292,    0.66246,   0.10538,
								 - 1.1814,    - 1.1721,    0.41475,  - 1.5987,
								  0.45405,  - 0.017653,  - 0.10867,   0.17937 };

	/* Matrix C */
	float C[row_a * column_b];

	/* Do mul: C = A*B */
	clock_t start, end;
	float cpu_time_used;
	start = clock();
	mul(A, B, C, row_a, column_a, column_b);
	end = clock();
	cpu_time_used = ((float)(end - start)) / CLOCKS_PER_SEC;
	printf("\nTotal speed  was %f\n", cpu_time_used);

	/* Print C matrix */
	print(C, row_a, column_b);

	return EXIT_SUCCESS;
}

/*
 * GNU Octave code:
	 * >> A
	A =

		  0.76266      0.36198        0.914      0.16636       0.5355
		  0.28773      0.44241      0.82234      0.65563     0.083685
		  0.73337      0.12225      0.81561      0.19684      0.08097
		  0.77798      0.68865      0.53003      0.96914      0.57218
		  0.47306      0.34114     0.029444      0.94223      0.54471
		  0.66311      0.46325      0.12197      0.19522      0.35924

	>> B
	B =

		  0.92328     -0.34648     0.048628      0.37831
		  0.68159     -0.88784      0.15051     -0.75803
		  -1.4826      -0.9292      0.66246      0.10538
		  -1.1814      -1.1721      0.41475      -1.5987
		  0.45405    -0.017653     -0.10867      0.17937

	>> C = A*B
	C =

		  -0.3576      -1.6394      0.70786    -0.059444
		  -1.3886      -2.0265      0.88817       -1.173
		 -0.64455      -1.3526      0.66721    -0.029439
		 -0.48332      -2.5195      0.83237      -1.6185
		 -0.24024      -1.6082      0.42544      -1.4851
		  0.67963     -0.98954      0.22469     -0.33509

	>>
 */
