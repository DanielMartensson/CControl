/*
 ============================================================================
 Name        : svd_golub_reinsch.c
 Author      : Daniel MÃ¥rtensson
 Version     : 1.0
 Copyright   : MIT
 Description : Do singular value decomposition on non square matrix A
 ============================================================================
 */

#include "CControl/Headers/Functions.h"

int main() {

	/* Matrix A */
	float A[6*4] = {0.7179787,   0.7985186,   0.1000046,   0.2203064,
					0.9044292,   0.5074379,   0.3539301,   0.9475452,
					0.0029252,   0.4930148,   0.3209303,   0.5289174,
					0.6546133,   0.7354447,   0.9989453,   0.0310190,
					0.7434944,   0.0874402,   0.3388867,   0.8256180,
					0.7483093,   0.3624991,   0.2039784,   0.5528368};

	float U[6*4];
	float S[4];
	float V[4*4];

	/* Do SVD with Golub Reinsch method */
	clock_t start, end;
	float cpu_time_used;
	start = clock();
	uint8_t status = svd_golub_reinsch(A, 6, 4, U, S, V);
	end = clock();
	cpu_time_used = ((float) (end - start)) / CLOCKS_PER_SEC;
	printf("\nTotal speed  was %f\n", cpu_time_used);

	/* Print U */
	printf("U\n");
	print(U, 6, 4);

	/* Print U */
	printf("S\n");
	print(S, 4, 1);

	/* Print V */
	printf("V\n");
	print(V, 4, 4);

	/* Print A */
	printf("A\n");
	print(A, 6, 4);

	/* Print status */
	printf("Status is(1 = success, 0 = fail): %d\n", status);

	return EXIT_SUCCESS;
}

/*
 * GNU Octave code:
 * A = [0.7179787,   0.7985186,   0.1000046,   0.2203064,
		0.9044292,   0.5074379,   0.3539301,   0.9475452,
		0.0029252,   0.4930148,   0.3209303,   0.5289174,
		0.6546133,   0.7354447,   0.9989453,   0.0310190,
		0.7434944,   0.0874402,   0.3388867,   0.8256180,
		0.7483093,   0.3624991,   0.2039784,   0.5528368];

   [U, S, V] = svd(A)
 */
