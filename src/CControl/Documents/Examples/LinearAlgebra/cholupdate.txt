/*
 ============================================================================
 Name        : cholupdate.c
 Author      : Daniel MÃ¥rtensson
 Version     : 1.0
 Copyright   : MIT
 Description : Compute the Cholesky update
 ============================================================================
 */

#include "CControl/Headers/Functions.h"

int main() {

	float L[4*4] = {1,   0,   0,   0,
				    1,   1,   0,   0,
				    1,   2,   1,   0,
				    1,   3,   3,   1};

	float x[4] = {0,
		          0,
		          0,
		       1/sqrtf(2)};

	clock_t start, end;
	float cpu_time_used;
	start = clock();

	bool rank_one_update = false; /* false = rank_one_downdate */
	cholupdate(L, x, 4, rank_one_update);

	end = clock();
	cpu_time_used = ((float) (end - start)) / CLOCKS_PER_SEC;
	printf("\nTotal speed  was %f\n", cpu_time_used);

	/* Result */
	print(L, 4,4);

	return EXIT_SUCCESS;
}

/* GNU Octave code:
 *
	A = pascal(4);
	A = chol(A, 'lower');
	x =  [0;0;0;1/sqrt(2)];
	cholupdate2(A, x, '-')  % or '-' (see the MATLAB code in cholupdate function)
 */