/*
 ============================================================================
 Name        : cholupdate.c
 Author      : Daniel MÃ¥rtensson
 Version     : 1.0
 Copyright   : MIT
 Description : Compute the Cholesky update
 ============================================================================
 */

#include "CControl/Headers/Functions.h"

int main() {

	float A[4*4] = {-3.2462,    2.1783,     2.4925,    		0,
	                      0,   -3.3096,    -1.4982,   		0,
			      0,   	 0,    -5.8431,           -1.0139,
		              0,    	 0,          0,           -4.8889};

	float x[4] = {-3.0105,
		       2.2319,
		       2.5538,
		            0};

	clock_t start, end;
	float cpu_time_used;
	start = clock();

	bool rank_one_update = true; /* false = rank_one_downdate */
	cholupdate(A, x, 4, rank_one_update);

	end = clock();
	cpu_time_used = ((float) (end - start)) / CLOCKS_PER_SEC;
	printf("\nTotal speed  was %f\n", cpu_time_used);

	/* Result */
	print(A, 4,4);

	return EXIT_SUCCESS;
}

/* GNU Octave code:
 *
	 A = [-3.2462,  2.1783,      2.4925, 	      0;
	            0, -3.3096,     -1.4982,          0;
		    0,       0,     -5.8431,    -1.0139;
		    0,       0,           0,   -4.8889];

	x =  [-3.0105,
	       2.2319,
               2.5538,
		    0];

	cholupdate2(A, x, '+')  // or '-' (see the MATLAB code in cholupdate function above)
 */
